Sistema operativo utilizado
Linux debian11mate 5.10.0-26-amd64 #1 SMP Debian 5.10.197-1 (2023-09-29) x86_64 GNU/Linux
==== run-san ====
gcc -g -DSAN=1 -fsanitize=address -fsanitize=undefined -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin-san
./viajante.bin-san
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.838253
0 12 13 22 21 1 8 11 24 28 18 17 14 2 10 23 9 5 16 4 3 19 30 31 32 15 25 20 26 29 27 7 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.274081
0 20 17 2 14 12 21 8 22 25 15 29 19 23 10 31 3 9 18 1 27 26 6 7 11 13 30 32 5 4 28 16 24 0
Tiempo=26899

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.774944
0 1 15 24 11 29 6 27 7 8 20 25 12 14 31 19 3 10 32 30 5 22 9 4 2 26 23 18 16 28 17 13 21 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.838253
0 12 13 22 21 1 8 11 24 28 18 17 14 2 10 23 9 5 16 4 3 19 30 31 32 15 25 20 26 29 27 7 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.274081
0 20 17 2 14 12 21 8 22 25 15 29 19 23 10 31 3 9 18 1 27 26 6 7 11 13 30 32 5 4 28 16 24 0
Tiempo=26899

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.693083
0 24 2 15 17 13 12 31 32 4 18 19 23 16 5 28 10 21 26 27 22 3 9 29 7 14 1 30 6 8 11 20 25 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.838253
0 12 13 22 21 1 8 11 24 28 18 17 14 2 10 23 9 5 16 4 3 19 30 31 32 15 25 20 26 29 27 7 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.274081
0 20 17 2 14 12 21 8 22 25 15 29 19 23 10 31 3 9 18 1 27 26 6 7 11 13 30 32 5 4 28 16 24 0
Tiempo=26899

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.767499
0 20 13 12 2 11 24 29 26 27 6 7 5 32 28 16 31 18 23 4 10 30 1 15 9 3 19 21 22 14 8 17 25 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.838253
0 12 13 22 21 1 8 11 24 28 18 17 14 2 10 23 9 5 16 4 3 19 30 31 32 15 25 20 26 29 27 7 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.274081
0 20 17 2 14 12 21 8 22 25 15 29 19 23 10 31 3 9 18 1 27 26 6 7 11 13 30 32 5 4 28 16 24 0
Tiempo=26899

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.103539
0 14 16 18 4 5 22 29 25 24 15 6 19 23 9 10 32 28 3 27 7 26 30 12 31 1 13 21 8 17 20 2 11 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.838253
0 12 13 22 21 1 8 11 24 28 18 17 14 2 10 23 9 5 16 4 3 19 30 31 32 15 25 20 26 29 27 7 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.274081
0 20 17 2 14 12 21 8 22 25 15 29 19 23 10 31 3 9 18 1 27 26 6 7 11 13 30 32 5 4 28 16 24 0
Tiempo=26899

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.320991
0 14 15 16 25 21 26 1 17 20 24 12 9 19 29 23 32 31 18 22 3 4 28 10 5 2 30 7 6 27 11 13 8 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.838253
0 12 13 22 21 1 8 11 24 28 18 17 14 2 10 23 9 5 16 4 3 19 30 31 32 15 25 20 26 29 27 7 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.274081
0 20 17 2 14 12 21 8 22 25 15 29 19 23 10 31 3 9 18 1 27 26 6 7 11 13 30 32 5 4 28 16 24 0
Tiempo=26899

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.657503
0 13 21 24 25 7 26 29 5 10 32 23 16 28 31 9 18 4 19 22 15 30 8 11 6 1 27 14 3 2 17 12 20 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.838253
0 12 13 22 21 1 8 11 24 28 18 17 14 2 10 23 9 5 16 4 3 19 30 31 32 15 25 20 26 29 27 7 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.274081
0 20 17 2 14 12 21 8 22 25 15 29 19 23 10 31 3 9 18 1 27 26 6 7 11 13 30 32 5 4 28 16 24 0
Tiempo=26899

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.731691
0 24 22 19 2 26 6 27 29 3 10 5 28 16 12 31 18 23 9 30 17 13 25 15 1 14 32 4 21 7 11 8 20 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.838253
0 12 13 22 21 1 8 11 24 28 18 17 14 2 10 23 9 5 16 4 3 19 30 31 32 15 25 20 26 29 27 7 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.274081
0 20 17 2 14 12 21 8 22 25 15 29 19 23 10 31 3 9 18 1 27 26 6 7 11 13 30 32 5 4 28 16 24 0
Tiempo=26899

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.804280
0 20 14 12 13 8 3 9 27 6 2 21 25 24 15 17 11 7 30 32 5 4 18 28 31 16 23 19 1 10 22 26 29 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.838253
0 12 13 22 21 1 8 11 24 28 18 17 14 2 10 23 9 5 16 4 3 19 30 31 32 15 25 20 26 29 27 7 6 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.274081
0 20 17 2 14 12 21 8 22 25 15 29 19 23 10 31 3 9 18 1 27 26 6 7 11 13 30 32 5 4 28 16 24 0
Tiempo=26899

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=12614 speedup=2.132472 distancia minima=10.693083
0 24 2 15 17 13 12 31 32 4 18 19 23 16 5 28 10 21 26 27 22 3 9 29 7 14 1 30 6 8 11 20 25 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
==== run-g ====
gcc -g -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin-g
./viajante.bin-g
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.081626
0 5 23 8 1 4 20 3 13 26 31 22 28 16 32 9 29 2 19 18 10 7 25 24 27 14 15 21 6 11 12 30 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.444626
0 13 7 5 2 30 20 6 1 21 23 12 8 10 16 4 22 27 14 24 25 15 11 3 29 31 32 17 18 28 19 9 26 0
Tiempo=14508

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.534663
0 29 13 12 4 1 6 23 32 17 30 22 18 20 5 11 7 16 10 24 25 31 14 15 27 8 3 21 26 2 19 9 28 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.081626
0 5 23 8 1 4 20 3 13 26 31 22 28 16 32 9 29 2 19 18 10 7 25 24 27 14 15 21 6 11 12 30 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.444626
0 13 7 5 2 30 20 6 1 21 23 12 8 10 16 4 22 27 14 24 25 15 11 3 29 31 32 17 18 28 19 9 26 0
Tiempo=14508

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.513746
0 25 27 7 8 21 1 16 10 4 13 11 32 9 5 3 23 12 6 19 15 22 28 2 18 29 26 17 30 20 14 24 31 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.081626
0 5 23 8 1 4 20 3 13 26 31 22 28 16 32 9 29 2 19 18 10 7 25 24 27 14 15 21 6 11 12 30 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.444626
0 13 7 5 2 30 20 6 1 21 23 12 8 10 16 4 22 27 14 24 25 15 11 3 29 31 32 17 18 28 19 9 26 0
Tiempo=14508

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.830948
0 29 22 24 21 10 7 23 11 12 5 1 31 14 15 25 4 27 9 8 3 20 6 13 16 28 17 19 30 32 2 18 26 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.081626
0 5 23 8 1 4 20 3 13 26 31 22 28 16 32 9 29 2 19 18 10 7 25 24 27 14 15 21 6 11 12 30 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.444626
0 13 7 5 2 30 20 6 1 21 23 12 8 10 16 4 22 27 14 24 25 15 11 3 29 31 32 17 18 28 19 9 26 0
Tiempo=14508

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.936042
0 26 17 31 25 27 14 8 9 7 20 3 28 18 2 5 12 10 24 30 19 15 13 6 11 23 4 1 21 16 22 32 29 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.081626
0 5 23 8 1 4 20 3 13 26 31 22 28 16 32 9 29 2 19 18 10 7 25 24 27 14 15 21 6 11 12 30 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.444626
0 13 7 5 2 30 20 6 1 21 23 12 8 10 16 4 22 27 14 24 25 15 11 3 29 31 32 17 18 28 19 9 26 0
Tiempo=14508

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.505074
0 22 29 9 4 11 6 18 2 28 3 8 1 7 16 10 31 21 23 12 5 20 32 30 13 14 24 27 25 26 15 17 19 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.081626
0 5 23 8 1 4 20 3 13 26 31 22 28 16 32 9 29 2 19 18 10 7 25 24 27 14 15 21 6 11 12 30 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.444626
0 13 7 5 2 30 20 6 1 21 23 12 8 10 16 4 22 27 14 24 25 15 11 3 29 31 32 17 18 28 19 9 26 0
Tiempo=14508

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.103292
0 6 1 10 3 25 14 16 4 23 8 21 7 5 20 12 11 2 19 26 22 13 31 29 28 9 32 18 24 27 15 30 17 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.081626
0 5 23 8 1 4 20 3 13 26 31 22 28 16 32 9 29 2 19 18 10 7 25 24 27 14 15 21 6 11 12 30 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.444626
0 13 7 5 2 30 20 6 1 21 23 12 8 10 16 4 22 27 14 24 25 15 11 3 29 31 32 17 18 28 19 9 26 0
Tiempo=14508

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.008730
0 17 19 11 7 23 8 10 30 9 2 4 1 24 14 21 3 12 20 5 16 13 6 28 18 31 25 27 15 22 26 32 29 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.081626
0 5 23 8 1 4 20 3 13 26 31 22 28 16 32 9 29 2 19 18 10 7 25 24 27 14 15 21 6 11 12 30 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.444626
0 13 7 5 2 30 20 6 1 21 23 12 8 10 16 4 22 27 14 24 25 15 11 3 29 31 32 17 18 28 19 9 26 0
Tiempo=14508

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.646211
0 30 9 31 12 11 17 6 8 23 5 20 2 29 22 13 4 25 10 15 3 16 1 21 7 27 14 24 32 28 19 18 26 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.081626
0 5 23 8 1 4 20 3 13 26 31 22 28 16 32 9 29 2 19 18 10 7 25 24 27 14 15 21 6 11 12 30 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.444626
0 13 7 5 2 30 20 6 1 21 23 12 8 10 16 4 22 27 14 24 25 15 11 3 29 31 32 17 18 28 19 9 26 0
Tiempo=14508

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=6840 speedup=2.121053 distancia minima=11.008730
0 17 19 11 7 23 8 10 30 9 2 4 1 24 14 21 3 12 20 5 16 13 6 28 18 31 25 27 15 22 26 32 29 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
==== run ====
gcc -O -DOPT=1 -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin
./viajante.bin
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.695082
0 1 23 29 20 25 22 6 10 9 32 19 21 26 4 31 18 2 15 16 28 3 8 13 7 5 24 14 30 17 12 11 27 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.467511
0 10 21 19 11 18 3 28 25 20 14 30 16 31 26 12 27 22 5 13 6 24 7 4 29 15 17 8 32 2 23 1 9 0
Tiempo=10756

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.991072
0 21 32 27 11 6 14 13 30 5 7 10 19 2 4 22 8 3 9 12 1 16 24 23 25 20 29 15 31 17 26 28 18 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.695082
0 1 23 29 20 25 22 6 10 9 32 19 21 26 4 31 18 2 15 16 28 3 8 13 7 5 24 14 30 17 12 11 27 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.467511
0 10 21 19 11 18 3 28 25 20 14 30 16 31 26 12 27 22 5 13 6 24 7 4 29 15 17 8 32 2 23 1 9 0
Tiempo=10756

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.324213
0 9 1 15 28 14 27 7 24 32 8 3 26 10 19 21 23 4 31 20 2 25 29 12 16 18 11 30 6 13 5 17 22 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.695082
0 1 23 29 20 25 22 6 10 9 32 19 21 26 4 31 18 2 15 16 28 3 8 13 7 5 24 14 30 17 12 11 27 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.467511
0 10 21 19 11 18 3 28 25 20 14 30 16 31 26 12 27 22 5 13 6 24 7 4 29 15 17 8 32 2 23 1 9 0
Tiempo=10756

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.934771
0 19 11 18 27 6 20 15 12 17 14 30 24 21 8 10 26 22 31 29 16 25 1 9 28 23 2 4 5 7 32 13 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.695082
0 1 23 29 20 25 22 6 10 9 32 19 21 26 4 31 18 2 15 16 28 3 8 13 7 5 24 14 30 17 12 11 27 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.467511
0 10 21 19 11 18 3 28 25 20 14 30 16 31 26 12 27 22 5 13 6 24 7 4 29 15 17 8 32 2 23 1 9 0
Tiempo=10756

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.277976
0 19 28 12 18 5 11 4 9 7 13 30 14 24 22 32 27 6 16 1 31 15 25 20 29 26 2 21 3 23 17 8 10 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.695082
0 1 23 29 20 25 22 6 10 9 32 19 21 26 4 31 18 2 15 16 28 3 8 13 7 5 24 14 30 17 12 11 27 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.467511
0 10 21 19 11 18 3 28 25 20 14 30 16 31 26 12 27 22 5 13 6 24 7 4 29 15 17 8 32 2 23 1 9 0
Tiempo=10756

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.079604
0 8 11 17 10 13 5 27 6 24 14 15 2 29 1 20 23 26 25 31 4 28 9 21 3 22 7 32 30 16 12 19 18 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.695082
0 1 23 29 20 25 22 6 10 9 32 19 21 26 4 31 18 2 15 16 28 3 8 13 7 5 24 14 30 17 12 11 27 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.467511
0 10 21 19 11 18 3 28 25 20 14 30 16 31 26 12 27 22 5 13 6 24 7 4 29 15 17 8 32 2 23 1 9 0
Tiempo=10756

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.939229
0 18 12 6 14 28 11 8 21 16 15 2 19 10 9 26 25 29 7 31 23 20 1 3 22 30 24 13 5 27 32 4 17 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.695082
0 1 23 29 20 25 22 6 10 9 32 19 21 26 4 31 18 2 15 16 28 3 8 13 7 5 24 14 30 17 12 11 27 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.467511
0 10 21 19 11 18 3 28 25 20 14 30 16 31 26 12 27 22 5 13 6 24 7 4 29 15 17 8 32 2 23 1 9 0
Tiempo=10756

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.179672
0 23 20 29 31 22 6 14 17 26 30 24 7 5 27 9 19 1 10 3 21 12 8 25 16 13 2 15 4 11 18 32 28 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.695082
0 1 23 29 20 25 22 6 10 9 32 19 21 26 4 31 18 2 15 16 28 3 8 13 7 5 24 14 30 17 12 11 27 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.467511
0 10 21 19 11 18 3 28 25 20 14 30 16 31 26 12 27 22 5 13 6 24 7 4 29 15 17 8 32 2 23 1 9 0
Tiempo=10756

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.442563
0 32 18 1 4 15 23 28 10 16 20 29 31 25 3 21 17 19 12 9 8 27 26 2 22 5 24 6 14 7 30 13 11 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.695082
0 1 23 29 20 25 22 6 10 9 32 19 21 26 4 31 18 2 15 16 28 3 8 13 7 5 24 14 30 17 12 11 27 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.467511
0 10 21 19 11 18 3 28 25 20 14 30 16 31 26 12 27 22 5 13 6 24 7 4 29 15 17 8 32 2 23 1 9 0
Tiempo=10756

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=5209 speedup=2.064888 distancia minima=10.934771
0 19 11 18 27 6 20 15 12 17 14 30 24 21 8 10 26 22 31 29 16 25 1 9 28 23 2 4 5 7 32 13 3 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
